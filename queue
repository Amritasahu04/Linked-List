import java.util.Scanner;

public class StaticQueue {
    private static final int MAX = 5;
    private int[] queue = new int[MAX];
    private int front = -1;
    private int rear = -1;

    // Check if the queue is full
    public boolean is_full() {
        return rear == MAX - 1;
    }

    // Check if the queue is empty
    public boolean is_empty() {
        return front == -1 || front > rear;
    }

    // Insert an element to the rear end of the queue
    public void insert(int x) {
        if (is_full()) {
            System.out.println("Queue is full");
            return;
        }
        if (is_empty()) {
            front = 0;
        }
        queue[++rear] = x;
        System.out.println(x + " inserted into queue");
    }

    // Delete an element from the front of the queue
    public void delete() {
        if (is_empty()) {
            System.out.println("Queue is empty");
            return;
        }
        System.out.println(queue[front++] + " deleted from queue");
        if (front > rear) {
            front = rear = -1; // Reset the queue if it becomes empty
        }
    }

    // Display all elements of the queue
    public void display() {
        if (is_empty()) {
            System.out.println("Queue is empty");
            return;
        }
        System.out.print("Queue elements: ");
        for (int i = front; i <= rear; i++) {
            System.out.print(queue[i] + " ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        StaticQueue queue = new StaticQueue();
        Scanner scanner = new Scanner(System.in);
        int choice, value;

        do {
            System.out.println("\nQueue Operations Menu:");
            System.out.println("1. Insert");
            System.out.println("2. Delete");
            System.out.println("3. Display");
            System.out.println("4. Check if Full");
            System.out.println("5. Check if Empty");
            System.out.println("6. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter value to insert: ");
                    value = scanner.nextInt();
                    queue.insert(value);
                    break;
                case 2:
                    queue.delete();
                    break;
                case 3:
                    queue.display();
                    break;
                case 4:
                    if (queue.is_full()) {
                        System.out.println("Queue is full");
                    } else {
                        System.out.println("Queue is not full");
                    }
                    break;
                case 5:
                    if (queue.is_empty()) {
                        System.out.println("Queue is empty");
                    } else {
                        System.out.println("Queue is not empty");
                    }
                    break;
                case 6:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid choice! Please choose again.");
                    break;
            }
        } while (choice != 6);

        scanner.close();
    }
}